Successfully created:
{7, "#"}
{2, "include"}
{7, "<"}
{2, "iostream"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{1, "string"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{2, "regex"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{2, "fstream"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{2, "vector"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{2, "exception"}
{7, ">"}
{7, "#"}
{2, "include"}
{7, "<"}
{2, "sstream"}
{7, ">"}
{2, "void"}
{2, "filesConfigurer"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{0, "&"}
{2, "inputFile"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "ofstream"}
{0, "&"}
{2, "outputFile"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{0, "&"}
{2, "serviceWordsFile"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{0, "&"}
{2, "regexesFile"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{2, "configIn"}
{7, "("}
{5, ""config.txt""}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "inputFileName"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "getline"}
{7, "("}
{2, "configIn"}
{7, ","}
{2, "inputFileName"}
{7, ")"}
{7, ";"}
{2, "FILE"}
{6, "*"}
{2, "fileChecker"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "fopen"}
{7, "("}
{2, "inputFileName"}
{7, "."}
{2, "c_str"}
{7, "("}
{7, ")"}
{7, ","}
{5, ""r""}
{7, ")"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!fileChecker)"}
{7, "{"}
{2, "throw"}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{7, "("}
{5, ""Failed to open input file.""}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "std"}
{7, "::"}
{2, "fclose"}
{7, "("}
{2, "fileChecker"}
{7, ")"}
{7, ";"}
{2, "inputFile"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{7, "("}
{2, "inputFileName"}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "outputFileName"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "getline"}
{7, "("}
{2, "configIn"}
{7, ","}
{2, "outputFileName"}
{7, ")"}
{7, ";"}
{2, "fileChecker"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "fopen"}
{7, "("}
{2, "outputFileName"}
{7, "."}
{2, "c_str"}
{7, "("}
{7, ")"}
{7, ","}
{5, ""w""}
{7, ")"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!fileChecker)"}
{7, "{"}
{2, "throw"}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{7, "("}
{5, ""Failed to open output file.""}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "std"}
{7, "::"}
{2, "fclose"}
{7, "("}
{2, "fileChecker"}
{7, ")"}
{7, ";"}
{2, "outputFile"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "ofstream"}
{7, "("}
{2, "outputFileName"}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "serviceWordsFileName"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "getline"}
{7, "("}
{2, "configIn"}
{7, ","}
{2, "serviceWordsFileName"}
{7, ")"}
{7, ";"}
{2, "fileChecker"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "fopen"}
{7, "("}
{2, "serviceWordsFileName"}
{7, "."}
{2, "c_str"}
{7, "("}
{7, ")"}
{7, ","}
{5, ""r""}
{7, ")"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!fileChecker)"}
{7, "{"}
{2, "throw"}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{7, "("}
{5, ""Failed to open service words file.""}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "std"}
{7, "::"}
{2, "fclose"}
{7, "("}
{2, "fileChecker"}
{7, ")"}
{7, ";"}
{2, "serviceWordsFile"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{7, "("}
{2, "serviceWordsFileName"}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "regexesFileName"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "getline"}
{7, "("}
{2, "configIn"}
{7, ","}
{2, "regexesFileName"}
{7, ")"}
{7, ";"}
{2, "fileChecker"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "fopen"}
{7, "("}
{2, "regexesFileName"}
{7, "."}
{2, "c_str"}
{7, "("}
{7, ")"}
{7, ","}
{5, ""r""}
{7, ")"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!fileChecker)"}
{7, "{"}
{2, "throw"}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{7, "("}
{5, ""Failed to open regexes file.""}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "std"}
{7, "::"}
{2, "fclose"}
{7, "("}
{2, "fileChecker"}
{7, ")"}
{7, ";"}
{2, "regexesFile"}
{6, "="}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{7, "("}
{2, "regexesFileName"}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "void"}
{2, "decomment"}
{7, "("}
{2, "std"}
{7, "::"}
{1, "string"}
{0, "&"}
{2, "text"}
{7, ","}
{2, "char"}
{2, "shortComOne"}
{7, ","}
{2, "char"}
{2, "shortComTwo"}
{7, ","}
{2, "char"}
{2, "longComBeginOne"}
{7, ","}
{2, "char"}
{2, "longComBeginTwo"}
{7, ","}
{2, "char"}
{2, "longComEndOne"}
{7, ","}
{2, "char"}
{2, "longComEndTwo"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, "<"}
{6, "="}
{3, "1"}
{7, ")"}
{7, "{"}
{2, "return"}
{7, ";"}
{7, "}"}
{2, "bool"}
{2, "readingShortComment"}
{6, "="}
{2, "false"}
{7, ","}
{2, "readingLongComment"}
{6, "="}
{2, "false"}
{7, ","}
{2, "previousCharWasComment"}
{6, "="}
{2, "false"}
{7, ";"}
{2, "char"}
{2, "previousChar"}
{7, ","}
{2, "currentChar"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "bufferString"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "1"}
{7, ";"}
{2, "i"}
{7, "<"}
{6, "="}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ")"}
{7, "{"}
{2, "previousChar"}
{6, "="}
{2, "text"}
{7, "["}
{2, "i"}
{6, "-"}
{3, "1"}
{7, "]"}
{7, ";"}
{2, "currentChar"}
{6, "="}
{2, "text"}
{7, "["}
{2, "i"}
{7, "]"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!readingShortComment"}
{0, "&&"}
{0, "!readingLongComment"}
{0, "&&"}
{0, "!previousCharWasComment)"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "previousChar"}
{6, "="}
{6, "="}
{2, "shortComOne"}
{0, "&&"}
{2, "currentChar"}
{6, "="}
{6, "="}
{2, "shortComTwo"}
{7, ")"}
{7, "{"}
{2, "readingShortComment"}
{6, "="}
{2, "true"}
{7, ";"}
{7, "}"}
{1, "else"}
{1, "if"}
{7, "("}
{2, "previousChar"}
{6, "="}
{6, "="}
{2, "longComBeginOne"}
{0, "&&"}
{2, "currentChar"}
{6, "="}
{6, "="}
{2, "longComBeginTwo"}
{7, ")"}
{7, "{"}
{2, "readingLongComment"}
{6, "="}
{2, "true"}
{7, ";"}
{7, "}"}
{1, "else"}
{7, "{"}
{2, "bufferString"}
{6, "+"}
{6, "="}
{2, "previousChar"}
{7, ";"}
{7, "}"}
{7, "}"}
{1, "else"}
{1, "if"}
{7, "("}
{2, "readingShortComment"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "currentChar"}
{6, "="}
{6, "="}
{3, "10"}
{0, "||"}
{2, "currentChar"}
{6, "="}
{6, "="}
{3, "13"}
{7, ")"}
{7, "{"}
{2, "readingShortComment"}
{6, "="}
{2, "false"}
{7, ";"}
{7, "}"}
{7, "}"}
{1, "else"}
{1, "if"}
{7, "("}
{2, "readingLongComment"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "previousChar"}
{6, "="}
{6, "="}
{2, "longComEndOne"}
{0, "&&"}
{2, "currentChar"}
{6, "="}
{6, "="}
{2, "longComEndTwo"}
{7, ")"}
{7, "{"}
{2, "readingLongComment"}
{6, "="}
{2, "false"}
{7, ";"}
{2, "previousCharWasComment"}
{6, "="}
{2, "true"}
{7, ";"}
{7, "}"}
{7, "}"}
{1, "else"}
{1, "if"}
{7, "("}
{2, "previousCharWasComment"}
{7, ")"}
{7, "{"}
{2, "previousCharWasComment"}
{6, "="}
{2, "false"}
{7, ";"}
{7, "}"}
{7, "}"}
{2, "text"}
{6, "="}
{2, "bufferString"}
{7, ";"}
{7, "}"}
{2, "void"}
{2, "regexesReader"}
{7, "("}
{2, "std"}
{7, "::"}
{1, "string"}
{0, "&"}
{2, "regexesText"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "regex"}
{7, ">"}
{0, "&"}
{2, "regexesVector"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "istringstream"}
{2, "ris"}
{7, "("}
{2, "regexesText"}
{7, ")"}
{7, ";"}
{1, "int"}
{2, "n"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "ris"}
{7, ">>"}
{2, "n"}
{7, ";"}
{1, "if"}
{7, "("}
{2, "n"}
{6, "="}
{6, "="}
{3, "0"}
{7, ")"}
{7, "{"}
{2, "throw"}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{7, "("}
{5, ""Failed to read amount of regexes from regexes file.""}
{7, ")"}
{7, ";"}
{7, "}"}
{6, "++"}
{2, "n"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "i"}
{7, "<"}
{2, "n"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "enteredRegexString"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "getline"}
{7, "("}
{2, "ris"}
{7, ","}
{2, "enteredRegexString"}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "regex"}
{2, "enteredRegex"}
{7, "("}
{2, "enteredRegexString"}
{7, ")"}
{7, ";"}
{2, "regexesVector"}
{7, "."}
{2, "push_back"}
{7, "("}
{2, "enteredRegex"}
{7, ")"}
{7, ";"}
{7, "}"}
{7, "}"}
{2, "bool"}
{2, "initFiles"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "ofstream"}
{0, "&"}
{2, "outputStream"}
{7, ","}
{2, "std"}
{7, "::"}
{1, "string"}
{0, "&"}
{2, "inputText"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "regex"}
{7, ">"}
{0, "&"}
{2, "regexesVector"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{2, "inputStream"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{2, "serviceWordsStream"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "ifstream"}
{2, "regexesStream"}
{7, ";"}
{2, "char"}
{2, "shortComOne"}
{7, ","}
{2, "shortComTwo"}
{7, ","}
{2, "longComBeginOne"}
{7, ","}
{2, "longComBeginTwo"}
{7, ","}
{2, "longComEndOne"}
{7, ","}
{2, "longComEndTwo"}
{7, ";"}
{2, "try"}
{7, "{"}
{2, "filesConfigurer"}
{7, "("}
{2, "inputStream"}
{7, ","}
{2, "outputStream"}
{7, ","}
{2, "serviceWordsStream"}
{7, ","}
{2, "regexesStream"}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "catch"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{0, "&"}
{2, "e"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "cerr"}
{7, "<<"}
{5, ""Error 0-0. ""}
{7, "<<"}
{2, "e"}
{7, "."}
{2, "what"}
{7, "("}
{7, ")"}
{7, ";"}
{2, "return"}
{2, "false"}
{7, ";"}
{7, "}"}
{2, "serviceWordsStream"}
{7, ">>"}
{2, "shortComOne"}
{7, ">>"}
{2, "shortComTwo"}
{7, ">>"}
{2, "longComBeginOne"}
{7, ">>"}
{2, "longComBeginTwo"}
{7, ">>"}
{2, "longComEndOne"}
{7, ">>"}
{2, "longComEndTwo"}
{7, ";"}
{2, "inputText"}
{7, "."}
{2, "assign"}
{7, "("}
{7, "("}
{2, "std"}
{7, "::"}
{2, "istreambuf_iterator"}
{7, "<"}
{2, "char"}
{7, ">"}
{7, "("}
{2, "inputStream"}
{7, ")"}
{7, ")"}
{7, ","}
{7, "("}
{2, "std"}
{7, "::"}
{2, "istreambuf_iterator"}
{7, "<"}
{2, "char"}
{7, ">"}
{7, "("}
{7, ")"}
{7, ")"}
{7, ")"}
{7, ";"}
{2, "decomment"}
{7, "("}
{2, "inputText"}
{7, ","}
{2, "shortComOne"}
{7, ","}
{2, "shortComTwo"}
{7, ","}
{2, "longComBeginOne"}
{7, ","}
{2, "longComBeginTwo"}
{7, ","}
{2, "longComEndOne"}
{7, ","}
{2, "longComEndTwo"}
{7, ")"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "regexesText"}
{7, ";"}
{2, "regexesText"}
{7, "."}
{2, "assign"}
{7, "("}
{7, "("}
{2, "std"}
{7, "::"}
{2, "istreambuf_iterator"}
{7, "<"}
{2, "char"}
{7, ">"}
{7, "("}
{2, "regexesStream"}
{7, ")"}
{7, ")"}
{7, ","}
{7, "("}
{2, "std"}
{7, "::"}
{2, "istreambuf_iterator"}
{7, "<"}
{2, "char"}
{7, ">"}
{7, "("}
{7, ")"}
{7, ")"}
{7, ")"}
{7, ";"}
{2, "decomment"}
{7, "("}
{2, "regexesText"}
{7, ","}
{2, "shortComOne"}
{7, ","}
{2, "shortComTwo"}
{7, ","}
{2, "longComBeginOne"}
{7, ","}
{2, "longComBeginTwo"}
{7, ","}
{2, "longComEndOne"}
{7, ","}
{2, "longComEndTwo"}
{7, ")"}
{7, ";"}
{2, "try"}
{7, "{"}
{2, "regexesReader"}
{7, "("}
{2, "regexesText"}
{7, ","}
{2, "regexesVector"}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "catch"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "invalid_argument"}
{0, "&"}
{2, "e"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "cerr"}
{7, "<<"}
{5, ""Error 0-1. ""}
{7, "<<"}
{2, "e"}
{7, "."}
{2, "what"}
{7, "("}
{7, ")"}
{7, ";"}
{2, "return"}
{2, "false"}
{7, ";"}
{7, "}"}
{2, "return"}
{2, "true"}
{7, ";"}
{7, "}"}
{2, "bool"}
{2, "isCharDivider"}
{7, "("}
{2, "char"}
{2, "t"}
{7, ")"}
{7, "{"}
{2, "return"}
{2, "t"}
{6, "="}
{6, "="}
{0, "'"}
{0, "'"}
{0, "||"}
{2, "t"}
{6, "="}
{6, "="}
{0, "'\n'"}
{0, "||"}
{2, "t"}
{6, "="}
{6, "="}
{0, "'\t';"}
{7, "}"}
{2, "void"}
{2, "getLexems"}
{7, "("}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "text"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "regex"}
{7, ">"}
{0, "&"}
{2, "regexes"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "pair"}
{7, "<"}
{1, "int"}
{7, ","}
{2, "std"}
{7, "::"}
{1, "string"}
{7, ">"}
{7, ">"}
{0, "&"}
{2, "lexems"}
{7, ")"}
{7, "{"}
{1, "int"}
{2, "p"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "while"}
{7, "("}
{2, "p"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "while"}
{7, "("}
{2, "p"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{0, "&&"}
{2, "isCharDivider"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{6, "="}
{0, "'$';"}
{6, "++"}
{2, "p"}
{7, ";"}
{7, "}"}
{1, "if"}
{7, "("}
{2, "p"}
{6, "="}
{6, "="}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{2, "return"}
{7, ";"}
{1, "int"}
{2, "type"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "name"}
{6, "="}
{5, """"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "1"}
{7, ";"}
{2, "i"}
{7, "<"}
{2, "regexes"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "smatch"}
{2, "token"}
{7, ";"}
{1, "if"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "regex_search"}
{7, "("}
{2, "text"}
{7, ","}
{2, "token"}
{7, ","}
{2, "regexes"}
{7, "["}
{2, "i"}
{7, "]"}
{7, ")"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "token"}
{7, "."}
{2, "prefix"}
{7, "("}
{7, ")"}
{7, "."}
{2, "length"}
{7, "("}
{7, ")"}
{6, "="}
{6, "="}
{2, "p"}
{0, "&&"}
{2, "name"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, "<"}
{2, "token"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "type"}
{6, "="}
{2, "i"}
{7, ","}
{2, "name"}
{6, "="}
{2, "token"}
{7, "."}
{2, "str"}
{7, "("}
{7, ")"}
{7, ";"}
{7, "}"}
{7, "}"}
{7, "}"}
{2, "bool"}
{2, "isundefined"}
{6, "="}
{7, "("}
{2, "type"}
{6, "="}
{6, "="}
{3, "0"}
{7, ")"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "i"}
{7, "<"}
{2, "name"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{0, "||"}
{2, "isundefined"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ","}
{6, "++"}
{2, "p"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "isCharDivider"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ")"}
{2, "isundefined"}
{6, "="}
{3, "0"}
{7, ";"}
{1, "if"}
{7, "("}
{2, "isundefined"}
{7, ")"}
{2, "name"}
{7, "."}
{2, "push_back"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ";"}
{2, "isundefined"}
{0, "&="}
{7, "("}
{2, "p"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{6, "-"}
{3, "1"}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "text"}
{6, "="}
{2, "text"}
{7, "."}
{2, "substr"}
{7, "("}
{2, "p"}
{7, ")"}
{7, ";"}
{2, "p"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "lexems"}
{7, "."}
{2, "push_back"}
{7, "("}
{7, "{"}
{2, "type"}
{7, ","}
{2, "name"}
{7, "}"}
{7, ")"}
{7, ";"}
{7, "}"}
{7, "}"}
{2, "void"}
{2, "getLexemsUsingMatch"}
{7, "("}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "text"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "regex"}
{7, ">"}
{0, "&"}
{2, "regexes"}
{7, ","}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "pair"}
{7, "<"}
{1, "int"}
{7, ","}
{2, "std"}
{7, "::"}
{1, "string"}
{7, ">"}
{7, ">"}
{0, "&"}
{2, "lexems"}
{7, ")"}
{7, "{"}
{1, "int"}
{2, "p"}
{6, "="}
{3, "0"}
{7, ","}
{2, "end"}
{6, "="}
{3, "1"}
{7, ";"}
{2, "while"}
{7, "("}
{2, "p"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "end"}
{6, "="}
{2, "p"}
{7, ";"}
{2, "while"}
{7, "("}
{2, "end"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{0, "&&"}
{2, "isCharDivider"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{6, "="}
{0, "'$';"}
{6, "++"}
{2, "p"}
{7, ";"}
{6, "++"}
{2, "end"}
{7, ";"}
{7, "}"}
{1, "if"}
{7, "("}
{2, "end"}
{6, "="}
{6, "="}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{2, "return"}
{7, ";"}
{1, "int"}
{2, "type"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "name"}
{6, "="}
{5, """"}
{7, ";"}
{2, "bool"}
{2, "weFoundLexem"}
{6, "="}
{2, "false"}
{7, ";"}
{2, "while"}
{7, "("}
{2, "end"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{7, "{"}
{1, "int"}
{2, "subType"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "1"}
{7, ";"}
{2, "i"}
{7, "<"}
{2, "regexes"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "smatch"}
{2, "token"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "sub"}
{6, "="}
{2, "text"}
{7, "."}
{2, "substr"}
{7, "("}
{2, "p"}
{7, ","}
{7, "("}
{2, "end"}
{6, "-"}
{2, "p"}
{6, "+"}
{3, "1"}
{7, ")"}
{7, ")"}
{7, ";"}
{1, "if"}
{7, "("}
{2, "std"}
{7, "::"}
{2, "regex_match"}
{7, "("}
{2, "sub"}
{7, ","}
{2, "token"}
{7, ","}
{2, "regexes"}
{7, "["}
{2, "i"}
{7, "]"}
{7, ")"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "name"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, "<"}
{2, "token"}
{7, "["}
{3, "0"}
{7, "]"}
{7, "."}
{2, "str"}
{7, "("}
{7, ")"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{7, ")"}
{7, "{"}
{2, "type"}
{6, "="}
{2, "i"}
{7, ","}
{2, "name"}
{6, "="}
{2, "token"}
{7, "."}
{2, "str"}
{7, "("}
{7, ")"}
{7, ";"}
{2, "weFoundLexem"}
{6, "="}
{2, "true"}
{7, ";"}
{2, "subType"}
{6, "="}
{2, "i"}
{7, ";"}
{7, "}"}
{7, "}"}
{7, "}"}
{1, "if"}
{7, "("}
{2, "subType"}
{6, "="}
{6, "="}
{3, "0"}
{0, "&&"}
{2, "weFoundLexem"}
{7, ")"}
{7, "{"}
{2, "break"}
{7, ";"}
{7, "}"}
{6, "++"}
{2, "end"}
{7, ";"}
{7, "}"}
{2, "bool"}
{2, "isundefined"}
{6, "="}
{7, "("}
{2, "type"}
{6, "="}
{6, "="}
{3, "0"}
{7, ")"}
{7, ";"}
{2, "for"}
{7, "("}
{1, "int"}
{2, "i"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "i"}
{7, "<"}
{2, "name"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{0, "||"}
{2, "isundefined"}
{7, ";"}
{6, "++"}
{2, "i"}
{7, ","}
{6, "++"}
{2, "p"}
{7, ")"}
{7, "{"}
{1, "if"}
{7, "("}
{2, "isCharDivider"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ")"}
{2, "isundefined"}
{6, "="}
{3, "0"}
{7, ";"}
{1, "if"}
{7, "("}
{2, "isundefined"}
{7, ")"}
{2, "name"}
{7, "."}
{2, "push_back"}
{7, "("}
{2, "text"}
{7, "["}
{2, "p"}
{7, "]"}
{7, ")"}
{7, ";"}
{2, "isundefined"}
{0, "&="}
{7, "("}
{2, "p"}
{7, "<"}
{2, "text"}
{7, "."}
{2, "size"}
{7, "("}
{7, ")"}
{6, "-"}
{3, "1"}
{7, ")"}
{7, ";"}
{7, "}"}
{2, "text"}
{6, "="}
{2, "text"}
{7, "."}
{2, "substr"}
{7, "("}
{2, "p"}
{7, ")"}
{7, ";"}
{2, "p"}
{6, "="}
{3, "0"}
{7, ";"}
{2, "lexems"}
{7, "."}
{2, "push_back"}
{7, "("}
{7, "{"}
{2, "type"}
{7, ","}
{2, "name"}
{7, "}"}
{7, ")"}
{7, ";"}
{7, "}"}
{7, "}"}
{1, "int"}
{2, "main"}
{7, "("}
{7, ")"}
{7, "{"}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "pair"}
{7, "<"}
{1, "int"}
{7, ","}
{2, "std"}
{7, "::"}
{1, "string"}
{7, ">"}
{7, ">"}
{2, "lexems"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "vector"}
{7, "<"}
{2, "std"}
{7, "::"}
{2, "regex"}
{7, ">"}
{2, "regexes"}
{7, ";"}
{2, "std"}
{7, "::"}
{1, "string"}
{2, "text"}
{7, ";"}
{2, "std"}
{7, "::"}
{2, "ofstream"}
{2, "output"}
{7, ";"}
{1, "if"}
{7, "("}
{0, "!initFiles(output,"}
{2, "text"}
{7, ","}
{2, "regexes"}
{7, ")"}
{7, ")"}
{2, "return"}
{3, "0"}
{7, ";"}
{2, "getLexemsUsingMatch"}
{7, "("}
{2, "text"}
{7, ","}
{2, "regexes"}
{7, ","}
{2, "lexems"}
{7, ")"}
{7, ";"}
{2, "output"}
{7, "<<"}
{5, ""Successfully created:\n""}
{7, ";"}
{2, "for"}
{7, "("}
{2, "auto"}
{2, "p"}
{0, ":"}
{2, "lexems"}
{7, ")"}
{7, "{"}
{2, "output"}
{7, "<<"}
{5, ""{""}
{7, "<<"}
{2, "p"}
{7, "."}
{2, "first"}
{7, "<<"}
{5, "", \""}
{5, "" << p.second << ""}
{0, "\"}\n";"}
{7, "}"}
{7, "}"}
